@*@QnSGeneratedCode*@
@page "/Settings/{Id:int}"
@page "/Settings/{Mode}"
@page "/Settings/{Mode}/{Id:int}"
@page "/Settings/{Mode}/{Detail}/{Index:int}"
@page "/Settings/{Mode}/{Id:int}/{Detail}/{Index:int}"
@using Radzen;
@using QnSProjectAward.BlazorApp.Shared.Components.Persistence.Configuration;
@using TMasterContract = QnSProjectAward.Contracts.Persistence.Configuration.ISetting;
@using TMaster = QnSProjectAward.BlazorApp.Models.Persistence.Configuration.Setting;
@inherits Pages.MasterDetailsPage<TMasterContract, TMaster>

@{
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href=@($"{PageRoot}")>@Translate(PageRoot)</a></li>
            @if (Id > 0)
            {
                <li class="breadcrumb-item"><a href=@($"{ViewRef}")>@MasterName</a></li>
            }
            else
            {
                <li class="breadcrumb-item"><a href=@($"{NewRef}")>@TranslateFor(nameof(NewRef))</a></li>
            }
            <li class="breadcrumb-item active" aria-current="page">@Translate(DetailName)</li>
            <li class="ml-auto px-2"><RadzenButton Visible=@ModelSetting.AllowAdd Icon="add_circle_outline" ButtonStyle="ButtonStyle.Secondary" Size="ButtonSize.Small" Click="@(args => NavigationManager.NavigateTo(NewRef, true))" /></li>
            <li class="px-2"><RadzenButton Visible=@ModelSetting.AllowEdit Disabled="@(Id < 1)" Icon="edit" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Small" Click="@(args => NavigationManager.NavigateTo(EditRef))" /></li>
            <li class="px-2"><RadzenButton Visible=@ModelSetting.AllowDelete Disabled="@(Id < 1)" Icon="delete" ButtonStyle="ButtonStyle.Danger" Size="ButtonSize.Small" Click="@(args => NavigationManager.NavigateTo(DeleteRef))" /></li>
        </ol>
    </nav>
    if (MenuItems.Count > 0)
    {
        <RadzenMenu Click="@(args => OnMenuItemClick(args))">
            <RadzenMenuItem Text="@Translate(ComponentName)" Icon="grid_on" Style="z-index: 1000;">
                @foreach (var item in MenuItems)
                {
                    <RadzenMenuItem Text="@item.Text" Value="@item.Value" Path="@item.Path" Icon="@item.Icon"></RadzenMenuItem>
                }
            </RadzenMenuItem>
        </RadzenMenu>
    }
}

@if (CanRender)
{
    <SettingMasterComponent MasterDetailsPage=@this />
    <hr />
    <QnSProjectAward.BlazorApp.Shared.Components.Persistence.Configuration.SettingDetailsComponent MasterDetailsPage=@this />
}
else
{
    <QnSProjectAward.BlazorApp.Shared.Components.LoadingIndicator />
}

